name: Build Binary
on: [push]
jobs:
  build_windows:
    name: Build Windows Binary
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2    
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-pc-windows-gnu
          default: true
      - uses: msys2/setup-msys2@v2
        with:
          install: gcc make wget lzip m4
      - name: Cache dependencies
        id: cache-deps
        uses: actions/cache@v2
        with:
          path: output
          key: "${{ runner.os }}-deps"
      - name: Build dependencies
        if: steps.cache-deps.outputs.cache-hit != 'true'
        shell: msys2 {0}
        run: |
          cd "$GITHUB_WORKSPACE"
          bash build.sh
      - run: |
          $env:PATH = "C:\msys64\mingw64\bin;$env:PATH"
          echo "$env:PATH"
          $env:DELSUM_STATIC_LIBS = 1
          $env:DELSUM_NTL_LIB_PATH = "$env:GITHUB_WORKSPACE\output\lib"
          $env:DELSUM_NTL_INCLUDE = "$env:GITHUB_WORKSPACE\output\include"
          cargo build --release --target x86_64-pc-windows-gnu
      - run: |
          cargo install cargo-strip
          cargo strip --target x86_64-pc-windows-gnu
      - uses: actions/upload-artifact@v2
        with:
          name: delsum_win
          path: 'target\x86_64-pc-windows-gnu\release\delsum.exe'
  build_linux:
    name: Build Linux Binary
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2    
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - run: sudo apt install m4 lzip
      - name: Cache dependencies
        id: cache-deps
        uses: actions/cache@v2
        with:
          path: output
          key: "${{ runner.os }}-deps"
      - name: Build dependencies
        if: steps.cache-deps.outputs.cache-hit != 'true'
        run: |
          cd "$GITHUB_WORKSPACE"
          bash build.sh
      - run: |
          export DELSUM_STATIC_LIBS=1
          export DELSUM_NTL_LIB_PATH="$GITHUB_WORKSPACE/output/lib"
          export DELSUM_NTL_INCLUDE="$GITHUB_WORKSPACE/output/include"
          cargo build --release
      - run: |
          cargo install cargo-strip
          cargo strip
      - uses: actions/upload-artifact@v2
        with:
          name: delsum-linux
          path: target/release/delsum
